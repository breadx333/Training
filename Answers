65. Дано четырехзначное число. Переставьте местами цифры так, чтобы сначала оказались цифры, меньшие пяти.
        a = int(input("Number 1: "))

        res = list(map(int, str(a)))

        g = []
        for i in res:
            if i < 5:
                g.append(i)
        for i in res:
            if i >= 5:
                g.append(i)
                
        print("".join(str(x) for x in g))

66. Даны два трехзначных числа. Получите новое число присоединением второго числа справа к первому без последних цифр у каждого. Например, 123 и 456 Ответ: 1245
        a = int(input("Number 1: "))
        b = int(input("Number 2: "))

        c = str(a)
        d = str(b)

        print(c[:-1] + d[:-1])

67. Дано четырехзначное число. Поменяйте местами наименьшую и наибольшую цифры.
        a = int(input("Number 1: "))
        c = str(a)

        max_ = max(c)
        min_ = min(c)

        res = []

        for i in c:
           if i == min_:
               res.append(max_)
           elif i == max_:
               res.append(min_)
           else:
               res.append(i)

        u = (int("".join(res)))
        print(u, type(u))

68. Даны коэффициенты a,b,c уравнения ax2+bx+c=0. Найти решение.
        import math

        a = int(input("Number 1: "))
        b = int(input("Number 1: "))
        c = int(input("Number 1: "))

        D = (b**2 - 4*a*c)

        if D < 0:
            print("Корней нет.")
        elif D == 0:
            print("Только один корень", (-b)/2*a)
        else:
            x1 = ((-1*b)+math.sqrt(D))/2*a
            x2 = ((-1*b)-math.sqrt(D))/2*a
            
            if x1 < 0 and x2 >= 0:
                print("Только один корень", x2)
            elif x2 < 0 and x1 >= 0:
                print("Только один корень", x1)
            elif x1 >= 0 and x2 >= 0:
                print("Тут два корня", x1, x2)
            else:
                print("Корней нет")

69. Пользователь вводит три числа - длины сторон треугольника. Найти площадь треугольника. Сделать проверку на существование треугольника
        import math

        def ss(a, b, c):
            if a + b > c and a + c > b and b + c > a:
                p = (a+b+c)/2
                S = math.sqrt(p*(p-a)*(p-b)*(p-c))
                print("Треугольник существует, его площадь", S)
            else:
                print("Треугольник не существует")

        while True:
            a = int(input("Number 1: "))
            b = int(input("Number 2: "))
            c = int(input("Number 3: "))
            ss(a, b, c)

70. Даны целочисленные координаты трех вершин прямоугольника, стороны которого параллельны координатным осям. Найдите координаты его четвертой вершины (после проверки введенных данных на правильность).
        import math ## какая-то говно задачка, решил через жоп, то есть без проверки

        a = (input("Number 1: ")).split(" ")
        b = (input("Number 2: ")).split(" ")
        c = (input("Number 3: ")).split(" ")

        x = 0
        y = 0

        q = list(map(int, a))
        w = list(map(int, b))
        e = list(map(int, c))

        if a[0] == b[0]:
            x = c[0]
        if a[0] == c[0]:
            x = b[0]
        if b[0] == c[0]:
            x = a[0]
        if a[1] == b[1]:
            y = c[1]
        if a[1] == c[1]:
            y = b[1]
        if b[1] == c[1]:
            y = a[1]

        print(x, y)

71. Даны числа h и m, где h - количество часов, m - количество минут некоторого момента времени. Найдите угол между часовой и минутной стрелками в этот момент времени.
        import math

        a = int(input("Number 1: "))
        b = int(input("Number 2: "))

        h = 30*(a%12)
        m = 6*(b%60)

        print(abs(h-m), "градусов")

72. Даны два прямоугольника, стороны которых параллельны или перпендикулярны осям координат. Известны координаты левого нижнего угла каждого из них и длины их сторон. Один из прямоугольников назовем первым, другой — вторым. Найти координаты левого нижнего и правого верхнего углов минимального прямоугольника, содержащего указанные прямоугольники.
        import math ##Мой мозг пока с этой задачей не справляется

        A1 = list(map(int, (input("Number 1: ")).split(" ")))
        A2 = list(map(int, (input("Number 2: ")).split(" ")))
        A1XY = list(map(int, (input("Длины сторон a: ")).split(" ")))
        A2XY = list(map(int, (input("Длины сторон b: ")).split(" ")))

        A1B = [A1[0]+A1XY[0], A1[1]]
        A1C = [A1[0]+A1XY[0], A1[1]+A1XY[1]]
        A1D = [A1[0], A1[1]+A1XY[1]]

        A2B = [A2[0]+A2XY[0], A2[1]]
        A2C = [A2[0]+A2XY[0], A2[1]+A2XY[1]]
        A2D = [A2[0], A2[1]+A2XY[1]]

        if A1[0]<=A2[0] and A1[1]<=A2[1]:


        if A1C >= A2:
            print("Пересекаются, координаты малого прямоугольника Левого нижнего", A2, "Правого верхнего", A1C)
        if A1B <= A2D:
            print("Пересекаются1, координаты малого прямоугольника Левовго нижнего", [A2[0], A1[1]], "Правого верхнего", [A1[0], A2D[2]])

73. Даны два прямоугольника, стороны которых параллельны или перпендикулярны осям координат. Известны координаты левого нижнего угла каждого из них и длины их сторон. Один из прямоугольников назовем первым, другой — вторым.
а) Определить, принадлежат ли все точки первого прямоугольника второму.
б) Определить, принадлежат ли все точки одного из прямоугольников другому.
в) Определить, пересекаются ли эти прямоугольники.

74. Даны целое число k, 1<k<180 и последовательность цифр 10111213...9899, в которой выписаны подряд все двузначные числа. Определить k-ю цифру в этой последовательности.
        import math

        a = int(input("Number 1: "))

        b = []

        for i in range(10, 111):
            b.append(i)

        c = list(map(int, "".join(map(str, b))))

        if 1<=a<=(len(c)):
            print(c[a-1])
        else:
            print("Только от 1 до", len(c))
            
Циклы и Арифметика
75. Выведите на экран 10 раз фразу "You are welcome!"
        a = input("Введите текст: ")

        i = 0

        while i<=10:
            print(a)
            i += 1

76. Выведите на экран n раз фразу "Silence is golden". Число n вводит пользователь.
        a = input("Введите текст: ")
        n = int(input("Скока раз вывести?: "))

        i = 0

        while i<n:
            print(a)
            i += 1

77. Выведите на экран прямоугольник из нулей. Количество строк вводит пользователь, количество столбцов равно 5.
        a = int(input("Высота прямоугольника: ")) ## Можно было бы через условия в цикле пойти ну ладно
        n = int(input("Длина прямоугольника: "))

        i = 0
        y = 0

        b = []

        while i<n:
            b.append(0)
            i += 1

        c = "".join(list(map(str, b)))

        while y<a:
            print(c)
            y += 1

78. Вывести на экран фигуру из звездочек:
*******
*******
*******
*******
(квадрат из n строк, в каждой строке n звездочек)
        То же самое что и на верху

79. Выведите на экран числа 1, 2, 3, 4, ..., 20.
        a = int(input("От скалки?: "))
        n = int(input("Да скалки?: "))

        for i in range(a, n):
            print(i)
            
80. Вывести на экран ряд чисел 1001,  1004,  1007,  ... 1025.
        То же самое что и 79
        
81. Вывести на экран числа 100, 96, 92, ... до последнего положительного включительно.
        a = int(input("От скалки?: "))
        n = int(input("Да скалки?: "))

        b = []

        for i in range(a, n):
            b.append(i)

        print(b[::-1])

82. Выведите на экран числа 1.2, 1.4, 1.6, ..., 2.8.
        import numpy

        a = float(input("От скалки?: "))
        n = float(input("Да скалки?: "))
        sh = float(input("Шаг?: "))

        for i in numpy.arange(a, n, sh):
            print(round(i, 1))

83. Выведите следующие строки. Первая: 25  25.5  24.8. Вторая: 26 26.5 25.8.  И так далее. Последняя строка: 35 35.5 34.8.
        import numpy ##Выводит какую-то ошибку - Похуй

        a = int(input("От скалки?: "))
        n = int(input("Да скалки?: "))

        d = list(range(a, n))

        def gg(x):
            print(x, end="\t")
            x += 0.5
            print(x, end="\t")
            x -= 0.2
            print(x, end="\n")

        print(list(filter([None], (list(map(gg, d))))))

84. Пользователь вводит курс доллара в рублях. Показать таблицу цен 1$, 2$, ..., 100$ в рублях, третьим столбцом добавить количество кг конфет, которые можно купить на данные суммы, если цена 1 кг конфет равна 20 руб. Пример: 1$ - 70 р - 3.5 кг и так далее (всего 100 строк).
        print("1 кг конфет стоит 20 рублей")

        a = int(input("Курс доллара в рублях: "))

        b = list(range(1, 101))

        for i in b:
            print("За", i, 'долларов можно купить', round(((a/20)*i), 1), "кг конфет")

85. Пользователь вводит количество строк. Вывести на экран логотип соответствующего размера. Если текст не помещается, то вывести логотип без текста.
        def ss(x, y):  ##Самого начала не правильным путем решения пошел, потратил много времени, и теперь есть решение без пропорций, если текст не помещяется то она все равно помещяется, лул
            t = int(x/5)
            z = int(y/4)
            p = int(y/2)
            for i in range(1, y+1):
                if i==1 or i==y:
                    print("["*(2*t), " "*t, "]"*(2*t))
                elif 1<i<z:
                    print("[", ":"*(2*t-1), " "*(t+2), ":"*(2*t-1), "]", sep="")
                elif i==z:
                    print("[", ":"*(t-2), "["*(t), ":", " "*(t+2), ":", "]"*(t), ":"*(t-2), "]", sep="")
                elif i == p:
                    print("[", ":"*(t-3), "[", " "*(int((t*3-9)/2)), "CODE THE WORLD", " "*(int((t*3-10)/2)), "]", ":"*(t-3), "]", sep='')
                elif i==z*3+1:
                    print("[", ":"*(t), "["*(t-2), ":", " "*(t+2), ":", "]"*(t-2), ":"*t, "]", sep="")
                elif z*3+1<i<y:
                    print("[", ":"*(2*t-1), " "*(t+2), ":"*(2*t-1), "]", sep="")
                else:
                    print("[", ":"*(t-3), "[", " "*(t*3+4), "]", ":"*(t-3), "]", sep='')

        a = int(input("Длина строки: "))
        b = int(input("Количество строк: "))

        ss(a, b)

86. Для данного n найти сумму 1+2+3+...+n. Например, для n=10 ответ равен 55.
        a = int(input("Number 1: "))

        t = 0

        for i in range(0, a):
            i += 1
            t += i

        print(t)

87. Найти сумму 10+11+12+13+...+88. Материал сайта www.itmathrepetitor.ru Ответ: 3871
        a = int(input("Number 1: "))

        t = 0
        i = 10

        while i<=a:
            t += i
            i += 1

        print(t)
88. Найти произведение 5⋅6⋅7⋅...⋅13.
        a = int(input("Number 1: "))

        t = 1
        i = 5

        while i<=a:
            t *= i
            i += 1

        print(t)

89. Найти сумму  1+4+7+11+...+112
        a = int(input("Number 1: "))

        t = 0

        for i in range(1, a, 3):
            t += i
            i += 1

        print(t)

90. Найти сумму cos(3/5)+cos(5/7)+cos(7/9)+...+cos(111/113).
        import math

        a = int(input("Number: "))+1

        q = []

        for i in range(3, a, 2):
            e = i/(i+2)
            q.append(math.cos(e))
            i += 1

        print(sum(q))

91. Найти сумму 2/3+3/4+4/5+...+9/10.
        import math

        a = int(input("Number: "))+1

        q = []

        for i in range(2, a):
            e = i/(i+1)
            q.append(e)
            i += 1

        print(sum(q))

92. Вывести на экран сто первых сумм вида 1+2+3+...+n.
        import math ##Вопроса нихерашечки не понял, поэтому как понял так и написал

        a = int(input("Number: "))+1

        q = []

        for i in range(1, a):
            q.append(str(i))
            i += 1

        print('+'.join(q), '=', sum(list(map(int, q))), sep='')

93. Найдите сумму квадратов первых n натуральных чисел
        import math

        a = int(input("Number: "))+1

        q = []

        for i in range(1, a):
            q.append(str(i**2))
            i += 1

        print('+'.join(q), '=', sum(list(map(int, q))), sep='')

94. Найдите сумму 1+1/2+1/3+…+1/n.
        import math

        a = int(input("Number: "))+1

        q = []

        for i in range(1, a):
            q.append(1/i)
            i += 1

        print(q, sum(q))

95. Даны a и n. Вычислите p=(a+1)^2 *(a+2)^2⋅…⋅(a+n)*2
        from functools import reduce

        a = int(input("Number: "))
        n = int(input("Number: "))+1

        p = []

        for i in range(1, n):
            e = (a+i)**2
            p.append(e)
            i += 1

        print(reduce(lambda x, y: x*y, p))

96. Дано натуральное число n. Вычислите 1/cosx+1/cosx^2+…+1/cosx^n
        import math ## Правильно, нет?

        x = int(input("Number x: "))
        n = int(input("Number n: "))+1

        q = []

        for i in range(1, n):
            e = 1/(math.cos(x**i))
            q.append(e)
            i += 1

        print(sum(q))

97. Вычислите 1⋅2+2⋅3⋅4+...+n⋅(n+1)⋅…⋅2n.
        from functools import reduce

        n = int(input("Number: "))

        q = list(range(1, n+1))
        x = []
        z = []

        for i in q:
            e = list(range(i, i*2+1))
            w = reduce((lambda x, y: x*y), e)
            x.append(e)
            z.append(w)

        print("+".join(list("*".join(list(map(str, x[i]))) for i in range(len(x)))), '=', "+".join(list(map(str, z))), '=', sum(z))

98. Начав тренировки, лыжник в первый день пробежал 10 км. Каждый следующий день он увеличивал пробег на 10% от пробега предыдущего дня. Определите: а) пробег лыжника за второй, третий, ..., десятый день тренировок; б) какой суммарный путь он пробежал за первые 7 дней тренировок. в) суммарный путь за n дней тренировок; г) в какой день ему следует прекратить увеличивать пробег, если он не должен превышать 80 км?
        a = float(input("Number 1: "))

        q = [a]

        i = 10

        while i<80:
            b = q[-1]+((q[-1]*10)/100)
            if b<80:
                q.append(round(b, 2))
                i = b
            else:
                break

        print("За неделю:", list((q[i] for i in range(0, 7))))
        print("Суммарная дистанция бега на первую неделю:", round(sum(list((q[i] for i in range(0, 7)))), 2), "км")
        print("Суммарная дистанция бега на все дни тренеровок, до того как дистанция ,бега стала не больше 80 км:", round(sum(q, 2)), "км")
        print("Следует прекратить увеличевать дистанцию бега на {0} дне".format(len(q)))

99. Вывести на экран числа от 1000 до 9999 такие, что все цифры различны.
        for i in range(1000,9999):
            if len(set(str(i))) == len(str(i)):
                print(i)
                
100. Вывести на экран числа от 1000 до 9999 такие, что среди цифр нет цифр 5 и цифры 6.
        for i in range(100, 1000):
            if '5' in list(str(i)) or '6' in list(str(i)):
                pass
            else:
                print(i)

101. Вывести все пятизначные числа, которые делятся на 2, у которых средняя цифра нечетная, и сумма всех цифр делится на 4. Материал сайта www.itmathrepetitor.ru
        for i in range(10000, 100000):
            if i%2 == 0:
                if (int((list(str(i))[2])))%2 != 0:
                    if sum(list(map(int, list(str(i))))) % 4 == 0:
                        print(i)

102. Вывести на экран числа от 1000 до 9999 такие, что среди цифр есть цифра 3.
        for i in range(1000, 10000):
            if '3' in set(str(i)):
                print(i)

103. Найдите трехзначные числа, равные сумме кубов своих цифр.
        for i in range(100, 1000):
            if i == sum(list(map(lambda x: x**3, list(map(int, (list(str(i)))))))):
                print(i)
                
104. Сколько существует четырехзначных чисел, которые в 600 раз больше суммы своих цифр?
        for i in range(1000, 10000):
            if i == sum(list(map(int, list(str(i)))))*600:
                print(i)
                
105. Найдите хотя одно натуральное число, которое делится на 11, а при делении на 2, 3, 4, ..., 10 дает в остатке 1
        a = 11
        while True:
            for i in range(2, 11):
                if a%i != 1:
                    a += 11
                    break
            else:
                print(a)
                break

106. Вывести на экран n единиц, затем 2n двоек, затем 3n троек. Число n вводит пользователь.
        a = int(input("Number 1: ")) #это шутка да?

        print("1"*a, "2"*(2*a), "3"*(3*a), sep='')
        
107. Вывести ряд чисел: десять десяток, девять девяток, восемь восьмерок, ... , одну единицу. Найти сумму всех этих чисел.
        q = []

        for i in reversed(range(1, 10)):
            w = str(i)*i
            q.append(w)

        print("\n".join(q), "\n", "Сумма всех цифр: ", sum(list(map(int, q))), sep='')

108. Выведите  на экран строки (в последней строке n звездочек):
                *
                **
                ***
                ****
                *****
        a = int(input("Number 1: "))

        for i in range(1, a+1):
            print("*"*i)

109. Выведите на экран строки вида:
                *******
                ****
                *******
                ****
                *******
                ****
                (всего n строк, звездочек или 7, или 4 по очереди)
        a = int(input("Number 1: "))

        for i in range(1, a+1):
            if i%2 == 1:
                print("*******")
            else:
                print("****")
110. Вывести на экран:
                AAABBBAAABBBAAABBB
                BBBAAABBBAAABBBAAA
                AAABBBAAABBBAAABBB
                (таких строк n, в каждой строке m троек AAA)
        a = int(input("Number 1: "))
        m = int(input("Number 1: "))

        for i in range(1, a+1):
            if i%2 == 1:
                print("AAABBB"*m)
            else:
                print("BBBAAA"*m)
111. Вывести на экран:
                AAAAAAAAAAAAAAAA
                ABBBBBBBBBBBBBBA
                ABBBBBBBBBBBBBBA
                ABBBBBBBBBBBBBBA
                AAAAAAAAAAAAAAAA
                (количество строк вводит пользователь, ширина прямоугольника в два раза больше высоты)
        a = int(input("Number 1: "))

        for i in range(1, a+1):
            if i == 1 or i == a:
                print("A"*(a*2))
            else:
                print("A", ("B"*(a*2-2)), "A", sep='')

112. Выведите на экран квадрат из нулей и единиц, причем нули находятся только на диагонали квадрата. Всего в квадрате сто цифр. Материал сайта www.itmathrepetitor.ru
        a = 10

        for i in range(1, a+1):
            if i == 1 or i == a:
                print("1"*a)
            else:
                print("1"*(i-1), "0", "1"*(abs(i-10)), sep='')

113. Вывести на экран 20 строк. В строках с четными номерами вывести по 10 чисел, равных номеру строки. В строках с нечетными номерами вывести десять единиц.
        a = int(input("Number 1: "))

        for i in range(1, a+1):
            if i%2 == 0:
                print(str(i)*10)
            else:
                print("1"*10)

114. Вывести 30 строк. Нечетные строки содержат натуральные числа от 1 до номера текущей строки включительно с шагом 1, четные строки состоят  из пяти единиц.
        a = int(input("Number 1: "))

        for i in range(1, a+1):
            if i%2 == 0:
                print("1"*5)
            else:
                print("".join(list(map(str, list(range(1, i+1))))))

115. Выведите на экран таблицу умножения для чисел от 1 до 10.
        for i in range(1,10):
            for j in range(1,10):
                print("%4d" % (i*j), end='')
            print()
или
        for i in range(1,10):
            for j in range(1, 10):
                print(j, "x", i, "=", i*j, sep='', end=' ')
            print()

116. Найдите количество целых чисел от a до b включительно, которые делятся на 12.
        a = int(input("Number 1: "))
        b = int(input("Number 2: "))

        q = []

        for i in range(a, b+1):
            if i%12 == 0:
                q.append(i)

        print("Количество чисел, которые четные и делятся на 12 -", len(q))
        
117. Пользователь вводит ненулевые числа до тех пор пока не введет ноль. Найдите сумму этих чисел.
        q = []

        while True:
            a = int(input("Number {num}: ".format(num = len(q)+1)))
            if a != 0:
                q.append(a)
            else:
                print(sum(q))
                break

118. Пользователь вводит ненулевые целые числа до тех пор, пока не введет ноль. Найдите количество четных чисел, которые он ввел.
        q = []

        while True:
            a = int(input("Number {num}: ".format(num = len(q)+1)))
            if a != 0:
                q.append(a)
            else:
                print("Количество четных чисел: ", len(list(filter(lambda x: x%2==0, q))))
                break

119. Найдите четырехзначные числа, сумма цифр которых равна 15.
        for i in range(1000, 10000):
            if sum(list(map(int, list(str(i))))) == 15:
                print(i)

120. Найдите наибольшую цифру в данном натуральном числе.
        a = float(input("Number 1: ")) #Математически все вроде правильно
        if a>0:
            print(int(a))
        else:
            print("Niyetu")
            
121. Дано натуральное число. Найдите количество четных цифр.
        a = float(input("Number 1: "))

        q = []

        if a>0:
            for i in range(1, int(a)+1):
                if i%2 == 0:
                    q.append(i)
            print("Количество четных чисел в данном натуральном числе:", len(q))
        else:
            print("Niyetu")

122. В данном натуральном числе найдите количество цифр, которые больше 3, но меньше 8.
        a = float(input("Number 1: "))

        q = []

        if a>0:
            for i in range(1, int(a)+1):
                if i>3 and i<8:
                    q.append(i)
            print("Количество чисел, которые меньше 8 и больше 3:", len(q))
        else:
            print("Niyetu")

123. Для данного натурального числа найдите число, цифры которого записаны в обратном порядке.
        a = float(input("Number 1: "))

        q = []

        if a>0:
            for i in reversed(range(1, int(a)+1)):
                    q.append(i)
            print(", ".join(list(map(str, q))))
        else:
            print("Niyetu")

124. Найдите n-ое число Фибоначчи.
        a = 0
        b = 1

        t = int(input("Number 1: "))

        if t<2:
            quit()

        print(a, b, end=' ')

        for i in range(2, t):
            a, b = b, a+b
            print(b, end=' ')
            
125. Вычислите значения функции f(x)=x2−sinx на отрезке [a;b] с шагом h. Результат представить в виде таблицы.
